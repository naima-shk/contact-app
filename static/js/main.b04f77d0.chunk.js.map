{"version":3,"sources":["component/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","useState","userData","setUserName","userAge","setUserAge","useEffect","fetch","then","results","json","data","map","user","class","style","margin","width","color","padding","src","picture","large","alt","className","name","first","last","gender","email","onClick","dob","age","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLA0DeA,MAzDf,SAAcC,GAER,MAA+BC,mBAAS,IAAxC,mBAAMC,EAAN,KAAgBC,EAAhB,KACA,EAA6BF,mBAAS,IAAtC,mBAAMG,EAAN,KAAeC,EAAf,KAwBA,OAvBAC,qBAAU,WACNC,MAAM,wCACLC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GAEFR,EAAYQ,EAAKF,cAEvB,IAiBF,mCAEEP,EAASU,KAAI,SAACC,GAAD,OACrB,qBAAKC,MAAM,cAAcC,MAAO,CAACC,OAAQ,QAAzC,SACM,qBAAKF,MAAM,oBAAoBC,MAAO,CAACE,MAAO,QAAQC,MAAO,QAASF,OAAQ,OAAQG,QAAQ,QAA9F,SACJ,sBAAKL,MAAM,UAAX,UACE,qBAAKA,MAAM,WAAX,SACE,qBAAKM,IAAKP,EAAKQ,QAAQC,MAAOR,MAAM,0BAA0BS,IAAI,eAEpE,qBAAKT,MAAM,WAAX,SACE,sBAAKA,MAAM,YAAYC,MAAO,CAACG,MAAO,SAAtC,UAEE,qBAAIM,UAAU,YAAd,mBAAiCX,EAAKY,KAAKC,MAA3C,IAAmDb,EAAKY,KAAKE,KAA7D,OACA,qBAAIH,UAAU,cAAd,qBAAqCX,EAAKe,OAA1C,OACA,qBAAIJ,UAAU,aAAd,oBAAmCX,EAAKgB,MAAxC,OACA,qBAAIL,UAAU,WAAd,kBAA+BpB,EAA/B,OACA,mBAAGoB,UAAU,cAAb,SAA2B,wBAAQV,MAAM,kBAAkBgB,QAAW,kBAAMzB,EAAWQ,EAAKkB,IAAIC,MAArE,0C,MC/BpBC,MATf,WAEE,OACE,sBAAKT,UAAU,aAAf,UACF,oBAAIA,UAAU,cAAd,yCACE,cAAC,EAAD,QCEWU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b04f77d0.chunk.js","sourcesContent":["import React,{useState ,useEffect}  from 'react';\r\nfunction Card(props){\r\n\r\n      const[userData, setUserName] = useState([]);\r\n      const[userAge, setUserAge] = useState(\"\");\r\n      useEffect(() => {\r\n          fetch('https://randomuser.me/api/?results=5')\r\n          .then(results => results.json())\r\n          .then(data =>{\r\n              //console.log(data)\r\n              setUserName(data.results);\r\n          });\r\n      },[])\r\n\r\n\r\n          /*<div className=\"card\" style={{width: '16rem'}}>\r\n          <img src={user.picture.medium}   alt=\"user-img\"></img>\r\n\r\n        <div class=\"card-body\">\r\n\r\n        <h5 className=\"card-name\">Name: {user.name.first} {user.name.last} </h5>\r\n        <h5 className='card-Gender'>Gender: {user.gender} </h5>\r\n        <h5 className='card-email'>Email: {user.email} </h5>\r\n        <h5 className='card-age'>Age: {userAge} </h5>\r\n        <p className='text-center'><button class=\"btn btn-primary\" onClick = {() => setUserAge(user.dob.age)}>Show Age</button></p>\r\n\r\n  </div>\r\n      </div>*/\r\n      return (\r\n      <>\r\n        {\r\n        userData.map((user) => (\r\n<div class=\"card-header\" style={{margin: '35px'}}>\r\n      <div class=\"card mb-3 mx-auto\" style={{width: '540px',color: 'green', margin: '45px', padding:'30px'}}>\r\n  <div class=\"row g-0\" >\r\n    <div class=\"col-md-4\">\r\n      <img src={user.picture.large} class=\"img-fluid rounded-start\" alt=\"user-img\"/>\r\n    </div>\r\n    <div class=\"col-md-8\">\r\n      <div class=\"card-body\" style={{color: 'green'}} >\r\n\r\n        <h5 className=\"card-name\">Name: {user.name.first} {user.name.last} </h5>\r\n        <h5 className='card-Gender'>Gender: {user.gender} </h5>\r\n        <h5 className='card-email'>Email: {user.email} </h5>\r\n        <h5 className='card-age'>Age: {userAge} </h5>\r\n        <p className='text-center'><button class=\"btn btn-primary\" onClick = {() => setUserAge(user.dob.age)}>Show Age</button></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n    ))}\r\n      </>\r\n  );}\r\n\r\nexport default Card\r\n","import Card from './component/Card.js'\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App(){\n\n  return(\n    <div className='container '>\n  <h1 className='text-center' >  Contact-List Application </h1>\n    <Card  />\n    </div>\n  )\n}\nexport default App;\n\n\n/*const Contacts = [\n  {\n    id: 1,\n    name: 'Daryl Otoole',\n    email: 'daryl.otoole@example.com'\n\n  //  avatarURL: 'http://localhost:5001/tyler.jpg'\n  },\n  {\n    id: 2,\n    name: 'Gavin Harris',\n    email: 'gavin.harris@example.com'\n    //avatarURL: 'http://localhost:5001/karen.jpg'\n  },\n  {\n    id: 3,\n    name: 'Sibylla Krenz',\n    email: 'sibylla.krenz@example.com'\n\n    //avatarURL: 'http://localhost:5001/richard.jpg'\n  },\n]*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}